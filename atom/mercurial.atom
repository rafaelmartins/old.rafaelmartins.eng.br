<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title type="text">Rafael Martins » mercurial</title>
  <id>/atom/mercurial.atom</id>
  <updated>2012-11-20T03:50:41Z</updated>
  <link href="http://old.rafaelmartins.eng.br/" />
  <link href="http://old.rafaelmartins.eng.br/atom/mercurial.atom" rel="self" />
  <author>
    <name>Rafael G. Martins</name>
  </author>
  <subtitle type="text">Gentoo Linux, Engineering and random stuff.</subtitle>
  <generator>blohg</generator>
  <entry>
    <title type="text">Project homepages for slackers</title>
    <id>/post/project-homepages-for-slackers/</id>
    <updated>2012-11-20T03:50:41Z</updated>
    <published>2012-11-20T03:50:41Z</published>
    <link href="http://old.rafaelmartins.eng.br/post/project-homepages-for-slackers/" />
    <author>
      <name>Rafael G. Martins</name>
      <email>rafael@rafaelmartins.eng.br</email>
    </author>
    <summary type="html">&lt;!-- tags: en-us,gentoo,mercurial --&gt;
&lt;blockquote class=&quot;pull-quote&quot;&gt;
&lt;strong&gt;Warning&lt;/strong&gt;: This project is deprecated. Look at
&lt;a class=&quot;reference external&quot; href=&quot;http://rafaelmartins.eng.br/projects/&quot;&gt;http://rafaelmartins.eng.br/projects/&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Create a homepage and documentation for a project is a boring task. I
have a few projects that were not released yet due to lack of time and
motivation to create a simple webpage and write down some &lt;a class=&quot;reference external&quot; href=&quot;http://sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;-based
documentation.&lt;/p&gt;
&lt;p&gt;To fix this issue I did a quick hack based on my favorite pieces of
software: &lt;a class=&quot;reference external&quot; href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;http://docutils.sourceforge.net/&quot;&gt;docutils&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;. It is a single file web
application that creates homepages automatically for my projects, using
data gathered from my &lt;a class=&quot;reference external&quot; href=&quot;http://hg.rafaelmartins.eng.br/&quot;&gt;Mercurial repositories&lt;/a&gt;. It uses the tags, the
README file, and a few variables declared on the repository's &lt;tt class=&quot;docutils literal&quot;&gt;.hgrc&lt;/tt&gt;
file to build an interesting homepage for each project. I just need to
improve my READMEs! :)&lt;/p&gt;
&lt;p&gt;It works similarly to the &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/&quot;&gt;PyPI Package Index&lt;/a&gt;, but accepts any project
hosted on a Mercurial repository, including my non-Python and Gentoo-only
projects.&lt;/p&gt;
&lt;p&gt;My instance of the application lives here (not anymore):&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://projects.rafaelmartins.eng.br/&quot;&gt;http://projects.rafaelmartins.eng.br/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The application is highly tied to my workflow, e.g. the way I handle tags
and the directory structure of my repositories on my server, but the code
is available in a Mercurial repository:&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/rafaelmartins/projects/&quot;&gt;https://github.com/rafaelmartins/projects/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Most of my projects aren't listed yet, and I'll start enabling them as soon
as I fix their READMEs.&lt;/p&gt;
</summary>
    <content type="html">&lt;!-- tags: en-us,gentoo,mercurial --&gt;
&lt;blockquote class=&quot;pull-quote&quot;&gt;
&lt;strong&gt;Warning&lt;/strong&gt;: This project is deprecated. Look at
&lt;a class=&quot;reference external&quot; href=&quot;http://rafaelmartins.eng.br/projects/&quot;&gt;http://rafaelmartins.eng.br/projects/&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;Create a homepage and documentation for a project is a boring task. I
have a few projects that were not released yet due to lack of time and
motivation to create a simple webpage and write down some &lt;a class=&quot;reference external&quot; href=&quot;http://sphinx-doc.org/&quot;&gt;Sphinx&lt;/a&gt;-based
documentation.&lt;/p&gt;
&lt;p&gt;To fix this issue I did a quick hack based on my favorite pieces of
software: &lt;a class=&quot;reference external&quot; href=&quot;http://flask.pocoo.org/&quot;&gt;Flask&lt;/a&gt;, &lt;a class=&quot;reference external&quot; href=&quot;http://docutils.sourceforge.net/&quot;&gt;docutils&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;. It is a single file web
application that creates homepages automatically for my projects, using
data gathered from my &lt;a class=&quot;reference external&quot; href=&quot;http://hg.rafaelmartins.eng.br/&quot;&gt;Mercurial repositories&lt;/a&gt;. It uses the tags, the
README file, and a few variables declared on the repository's &lt;tt class=&quot;docutils literal&quot;&gt;.hgrc&lt;/tt&gt;
file to build an interesting homepage for each project. I just need to
improve my READMEs! :)&lt;/p&gt;
&lt;p&gt;It works similarly to the &lt;a class=&quot;reference external&quot; href=&quot;http://pypi.python.org/&quot;&gt;PyPI Package Index&lt;/a&gt;, but accepts any project
hosted on a Mercurial repository, including my non-Python and Gentoo-only
projects.&lt;/p&gt;
&lt;p&gt;My instance of the application lives here (not anymore):&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://projects.rafaelmartins.eng.br/&quot;&gt;http://projects.rafaelmartins.eng.br/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The application is highly tied to my workflow, e.g. the way I handle tags
and the directory structure of my repositories on my server, but the code
is available in a Mercurial repository:&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://github.com/rafaelmartins/projects/&quot;&gt;https://github.com/rafaelmartins/projects/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Most of my projects aren't listed yet, and I'll start enabling them as soon
as I fix their READMEs.&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title type="text">Deploying blohg to bitbucket</title>
    <id>/post/deploying-blohg-to-bitbucket/</id>
    <updated>2012-08-13T02:35:34Z</updated>
    <published>2012-08-13T02:35:34Z</published>
    <link href="http://old.rafaelmartins.eng.br/post/deploying-blohg-to-bitbucket/" />
    <author>
      <name>Rafael G. Martins</name>
      <email>rafael@rafaelmartins.eng.br</email>
    </author>
    <summary type="html">&lt;!-- tags: en-us,blohg,bitbucket,mercurial --&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt; is a repository hosting service widely used by &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; users.
Its basic plan is free and includes unlimited private repositories.&lt;/p&gt;
&lt;p&gt;Some people don't know, because it isn't widely advertised, but &lt;a class=&quot;reference external&quot; href=&quot;http://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;
provides free web hosting for static files. Any files stored in a repo called
&lt;tt class=&quot;docutils literal&quot;&gt;username.bitbucket.org&lt;/tt&gt; will be served from &lt;a class=&quot;reference external&quot; href=&quot;http://username.bitbucket.org/&quot;&gt;http://username.bitbucket.org/&lt;/a&gt;.
It just works for user names, as far as I know.&lt;/p&gt;
</summary>
    <content type="html">&lt;!-- tags: en-us,blohg,bitbucket,mercurial --&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt; is a repository hosting service widely used by &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; users.
Its basic plan is free and includes unlimited private repositories.&lt;/p&gt;
&lt;p&gt;Some people don't know, because it isn't widely advertised, but &lt;a class=&quot;reference external&quot; href=&quot;http://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;
provides free web hosting for static files. Any files stored in a repo called
&lt;tt class=&quot;docutils literal&quot;&gt;username.bitbucket.org&lt;/tt&gt; will be served from &lt;a class=&quot;reference external&quot; href=&quot;http://username.bitbucket.org/&quot;&gt;http://username.bitbucket.org/&lt;/a&gt;.
It just works for user names, as far as I know.&lt;/p&gt;
&lt;!-- read_more --&gt;
&lt;p&gt;Some documentation is available here:&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+bitbucket&quot;&gt;https://confluence.atlassian.com/display/BITBUCKET/Publishing+a+Website+on+bitbucket&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;I never cared about creating a way to build a static version of a blohg-based
blog, but blohg is open-source and someone else cared about it. :)&lt;/p&gt;
&lt;p&gt;Benoît Allard implemented a &lt;tt class=&quot;docutils literal&quot;&gt;freeze&lt;/tt&gt; command for blohg, that uses the
&lt;a class=&quot;reference external&quot; href=&quot;http://packages.python.org/Frozen-Flask/&quot;&gt;Frozen-Flask&lt;/a&gt; extension to create a static version of the blog, and it was
merged with blohg a long time ago.&lt;/p&gt;
&lt;p&gt;I will list here the basic steps required to get your blohg-based blog
running on &lt;a class=&quot;reference external&quot; href=&quot;http://bitbucket.org/&quot;&gt;Bitbucket&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&quot;section&quot; id=&quot;creating-the-bitbucket-repository&quot;&gt;
&lt;h4&gt;Creating the Bitbucket repository&lt;/h4&gt;
&lt;p&gt;First of all, create a repository using the Bitbucket web interface.
It should be named &lt;tt class=&quot;docutils literal&quot;&gt;username.bitbucket.org&lt;/tt&gt;. For example, if your username
is &lt;tt class=&quot;docutils literal&quot;&gt;john&lt;/tt&gt;, your repository will be &lt;tt class=&quot;docutils literal&quot;&gt;john.bitbucket.org&lt;/tt&gt;. I'll use &lt;tt class=&quot;docutils literal&quot;&gt;blohg&lt;/tt&gt;
as the username for this example.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;setting-up-your-blohg-repository-before-freeze-the-content&quot;&gt;
&lt;h4&gt;Setting up your blohg repository before &amp;quot;freeze&amp;quot; the content&lt;/h4&gt;
&lt;p&gt;Supposing that you already have a blohg repository with the sources of your
blog, created following the &lt;a class=&quot;reference external&quot; href=&quot;http://docs.blohg.org&quot;&gt;official documentation&lt;/a&gt;,
you should add the following content to your &lt;tt class=&quot;docutils literal&quot;&gt;.hgignore&lt;/tt&gt; file, if it wasn't
added yet by the default blohg template:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
^build/
&lt;/pre&gt;
&lt;p&gt;This will prevent your blohg repository of include the build files by mistake.&lt;/p&gt;
&lt;p&gt;Now commit the &lt;tt class=&quot;docutils literal&quot;&gt;.hgignore&lt;/tt&gt; file to the repository, if needed:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg commit -Am 'Added .hgignore'
&lt;/pre&gt;
&lt;p&gt;These two steps aren't needed if your blohg repository was created using the
template shipped with a recent enough version of blohg.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;creating-a-makefile-to-automate-the-deployment&quot;&gt;
&lt;h4&gt;Creating a Makefile to automate the deployment&lt;/h4&gt;
&lt;p&gt;Now create a &lt;tt class=&quot;docutils literal&quot;&gt;Makefile&lt;/tt&gt; file at the root of your blohg repository, with the
following content (make sure to change &lt;tt class=&quot;docutils literal&quot;&gt;blohg&lt;/tt&gt; to your username):&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nf&quot;&gt;.PHONY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;push&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;USERNAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;blohg
&lt;span class=&quot;nv&quot;&gt;REPO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;USERNAME&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;.bitbucket.org

&lt;span class=&quot;nf&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    blohg freeze
    hg clone ssh://hg@bitbucket.org/&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;USERNAME&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;REPO&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/ /tmp/&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;REPO&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    cp -vr build/* /tmp/&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;REPO&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/
    hg commit -Am &lt;span class=&quot;s2&quot;&gt;&amp;quot;blohg update: $(shell date)&amp;quot;&lt;/span&gt; -R /tmp/&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;REPO&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    hg push -R /tmp/&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;REPO&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
    rm -rf /tmp/&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;REPO&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This &lt;tt class=&quot;docutils literal&quot;&gt;Makefile&lt;/tt&gt; isn't optimal, as it will clone/delete a local copy of the
repository each time you deploy your blog, but I think that you got the idea
and can improve it by yourself. :)&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;commiting-the-makefile-to-your-blohg-repository&quot;&gt;
&lt;h4&gt;Commiting the Makefile to your blohg repository&lt;/h4&gt;
&lt;p&gt;You can add this &lt;tt class=&quot;docutils literal&quot;&gt;Makefile&lt;/tt&gt; to your blohg repository, to make the deployments
easier everywhere:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg commit -Am 'Added Makefile'
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;publishing-the-blog&quot;&gt;
&lt;h4&gt;Publishing the blog&lt;/h4&gt;
&lt;p&gt;If everything is ok you should be able to publish your blog running the
following command:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ make push
&lt;/pre&gt;
&lt;p&gt;If you was already using the repository, you may get some conflicts. You'll
need to fix them by yourself, like you usually do for your software projects
versioned with &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;. :)&lt;/p&gt;
&lt;p&gt;You should run this command each time you publish a new post, change some
configuration parameter, etc. Make sure to run it after commit the changes
to the blohg repository.&lt;/p&gt;
&lt;p&gt;That's it, have fun!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title type="text">Reworking patches with Mercurial Queues</title>
    <id>/post/reworking-patches-with-mercurial-queues/</id>
    <updated>2011-07-19T02:03:04Z</updated>
    <published>2011-07-19T02:03:04Z</published>
    <link href="http://old.rafaelmartins.eng.br/post/reworking-patches-with-mercurial-queues/" />
    <author>
      <name>Rafael G. Martins</name>
      <email>rafael@rafaelmartins.eng.br</email>
    </author>
    <summary type="html">&lt;!-- tags: en-us,mercurial,git,gsoc,gentoo,diffball --&gt;
&lt;p&gt;The first task of my &lt;a class=&quot;reference external&quot; href=&quot;http://www.gentoo.org/proj/en/infrastructure/distpatch/&quot;&gt;GSoC project&lt;/a&gt; was to add XZ support to diffball,
that is a tool that generates binary deltas for tarballs and binaries
in general.&lt;/p&gt;
&lt;p&gt;diffball is versioned using &lt;a class=&quot;reference external&quot; href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;, that isn't something I like, personally.
I usually do &lt;a class=&quot;reference external&quot; href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt; in the same way as I do CVS and other centralized version
control systems, resulting in a bad patch series.&lt;/p&gt;
&lt;p&gt;As I don't know how to rework patches properly with &lt;a class=&quot;reference external&quot; href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;, I did it using
&lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/wiki/MqExtension&quot;&gt;Mercurial Queues&lt;/a&gt; that are something I know better.&lt;/p&gt;
&lt;p&gt;I'll show here how I reworked this patch series, as a mini-howto.&lt;/p&gt;
&lt;p&gt;Enjoy :)&lt;/p&gt;
</summary>
    <content type="html">&lt;!-- tags: en-us,mercurial,git,gsoc,gentoo,diffball --&gt;
&lt;p&gt;The first task of my &lt;a class=&quot;reference external&quot; href=&quot;http://www.gentoo.org/proj/en/infrastructure/distpatch/&quot;&gt;GSoC project&lt;/a&gt; was to add XZ support to diffball,
that is a tool that generates binary deltas for tarballs and binaries
in general.&lt;/p&gt;
&lt;p&gt;diffball is versioned using &lt;a class=&quot;reference external&quot; href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;, that isn't something I like, personally.
I usually do &lt;a class=&quot;reference external&quot; href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt; in the same way as I do CVS and other centralized version
control systems, resulting in a bad patch series.&lt;/p&gt;
&lt;p&gt;As I don't know how to rework patches properly with &lt;a class=&quot;reference external&quot; href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;, I did it using
&lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/wiki/MqExtension&quot;&gt;Mercurial Queues&lt;/a&gt; that are something I know better.&lt;/p&gt;
&lt;p&gt;I'll show here how I reworked this patch series, as a mini-howto.&lt;/p&gt;
&lt;p&gt;Enjoy :)&lt;/p&gt;
&lt;!-- read_more --&gt;
&lt;div class=&quot;section&quot; id=&quot;enable-required-extensions&quot;&gt;
&lt;h4&gt;Enable required extensions&lt;/h4&gt;
&lt;p&gt;I needed 2 extensions, &lt;a class=&quot;reference external&quot; href=&quot;http://hg-git.github.com/&quot;&gt;hg-git&lt;/a&gt; and &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/wiki/MqExtension&quot;&gt;mq&lt;/a&gt;. The first one for work in &lt;a class=&quot;reference external&quot; href=&quot;http://git-scm.com/&quot;&gt;Git&lt;/a&gt;
repositories with &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;, and the last one to work with &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/wiki/MqExtension&quot;&gt;Mercurial Queues&lt;/a&gt;.
&lt;a class=&quot;reference external&quot; href=&quot;http://hg-git.github.com/&quot;&gt;hg-git&lt;/a&gt; needs to be installed manually. &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/wiki/MqExtension&quot;&gt;mq&lt;/a&gt; is shipped with &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is what I added to my ~/.hgrc file:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
[extensions]
hggit =
mq =
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;cloning-the-repository-and-creating-the-queue&quot;&gt;
&lt;h4&gt;Cloning the repository and creating the queue&lt;/h4&gt;
&lt;p&gt;I need to clone the repository and analyze the &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; log:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg clone git://pkgcore.org/diffball
$ cd diffball
$ hg log
changeset:   451:481ff769b7fb
bookmark:    personal/rafaelmartins/xz-support
tag:         default/personal/rafaelmartins/xz-support
tag:         tip
user:        Rafael G. Martins &amp;lt;rafael&amp;#64;rafaelmartins.eng.br&amp;gt;
date:        Sun May 22 22:48:50 2011 -0300
summary:     actually added XZ functionality to libcfile.

changeset:   450:421a260e9f28
user:        Rafael G. Martins &amp;lt;rafael&amp;#64;rafaelmartins.eng.br&amp;gt;
date:        Sun May 22 17:22:08 2011 -0300
summary:     fixed typo when enabling dcbuffer debug

changeset:   449:69a5b5d62cc1
user:        Rafael G. Martins &amp;lt;rafael&amp;#64;rafaelmartins.eng.br&amp;gt;
date:        Sun May 22 13:22:28 2011 -0300
summary:     it's XZ, not LZMA.

changeset:   448:566bd0ffd47c
user:        Rafael G. Martins &amp;lt;rafael&amp;#64;rafaelmartins.eng.br&amp;gt;
date:        Sun May 22 12:44:49 2011 -0300
summary:     added liblzma build system checks, using pkgconfig

changeset:   447:bf8e84c492de
user:        Rafael G. Martins &amp;lt;rafael&amp;#64;rafaelmartins.eng.br&amp;gt;
date:        Sun May 22 12:33:32 2011 -0300
summary:     added LZMA auto-detection support.

changeset:   446:5797215cb97f
bookmark:    master
tag:         default/master
user:        Brian Harring &amp;lt;brian.harring&amp;#64;intel.com&amp;gt;
date:        Thu Apr 07 13:52:26 2011 -0700
summary:     update copyright/license specifics

...
&lt;/pre&gt;
&lt;p&gt;My commits are 447:451. I need to convert them to mq patches, after
initialize the mq repository:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg init --mq
$ hg qimport --git -r 447:451
$ hg qseries
447.diff
448.diff
449.diff
450.diff
451.diff
&lt;/pre&gt;
&lt;p&gt;Now I have 5 patches, with the local revision number as name. They are applied to
the original repository by default. I need to remove them before start re-adding
each one in the correct order:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg qpop -a
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&quot;section&quot; id=&quot;reworking-the-patches&quot;&gt;
&lt;h4&gt;Reworking the patches&lt;/h4&gt;
&lt;p&gt;I fixed a typo in the code that enable the dcbuffer debug. It's the 4th patch
in the original queue. As this patch isn't related to the XZ support I'm
implementing itself, I'll move it to the begin of the queue and rename it to
something better than the local revision number:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg qpush --move 450.diff
applying 450.diff
now at: 450.diff
$ hg qmv 450.diff fixed-typo-when-enabling-dcbuffer-debug.diff
&lt;/pre&gt;
&lt;p&gt;The patches &lt;tt class=&quot;docutils literal&quot;&gt;447.diff&lt;/tt&gt; and &lt;tt class=&quot;docutils literal&quot;&gt;449.diff&lt;/tt&gt; are related. I decided that I should
use the XZ name instead of LZMA, and changed the code of the first patch.
These 2 patches should be unified, creating a new patch:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ patch -p1 &amp;lt; .hg/patches/447.diff
patching file include/cfile.h
patching file libcfile/cfile.c
$ patch -p1 &amp;lt; .hg/patches/449.diff
patching file include/cfile.h
patching file libcfile/cfile.c
$ hg qnew --git --currentuser --currentdate -m &amp;quot;added XZ auto-detection support.&amp;quot; added-xz-autodetection-support.diff
$ hg qdelete 447.diff 449.diff
&lt;/pre&gt;
&lt;p&gt;&lt;tt class=&quot;docutils literal&quot;&gt;.hg/patches&lt;/tt&gt; is the &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; repository that the extension uses to store
the patches. It was created by the &lt;tt class=&quot;docutils literal&quot;&gt;hg init &lt;span class=&quot;pre&quot;&gt;--mq&lt;/span&gt;&lt;/tt&gt; command.&lt;/p&gt;
&lt;p&gt;The patch &lt;tt class=&quot;docutils literal&quot;&gt;448.diff&lt;/tt&gt; is ok, I'll just re-add it and rename:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg qpush 448.diff
applying 448.diff
now at: 448.diff
$ hg qmv 448.diff added-liblzma-build-system-checks-using-pkgconfig.diff
&lt;/pre&gt;
&lt;p&gt;The last unnaplied patch I have is &lt;tt class=&quot;docutils literal&quot;&gt;451.diff&lt;/tt&gt;, that is good, but the commit
message isn't ok. I'll re-add it, change the commit message and rename it:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg qpush 451.diff
applying 451.diff
now at: 451.diff
$ hg qrefresh -m &amp;quot;added XZ functionality to libcfile.&amp;quot;
$ hg qmv 451.diff added-xz-functionality-to-libcfile.diff
&lt;/pre&gt;
&lt;p&gt;At this point I have a &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; queue with the 4 reworked patches inside
&lt;tt class=&quot;docutils literal&quot;&gt;.hg/patches&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg qseries
fixed-typo-when-enabling-dcbuffer-debug.diff
added-xz-autodetection-support.diff
added-liblzma-build-system-checks-using-pkgconfig.diff
added-xz-functionality-to-libcfile.diff
&lt;/pre&gt;
&lt;p&gt;Commit the queue changes:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg commit --mq -m &amp;quot;added queue&amp;quot;
&lt;/pre&gt;
&lt;p&gt;I can publish it somewhere using the command:&lt;/p&gt;
&lt;pre class=&quot;literal-block&quot;&gt;
$ hg push --mq $REMOTE_REPO_URL
&lt;/pre&gt;
&lt;p&gt;My repository is here (broken url):&lt;/p&gt;
&lt;p&gt;&lt;a class=&quot;reference external&quot; href=&quot;http://hg.rafaelmartins.eng.br/mq/diffball&quot;&gt;http://hg.rafaelmartins.eng.br/mq/diffball&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This howto is far from perfect. I just wanted to give a quick introdution
for people that want to get started with this cool feature of &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;. :)&lt;/p&gt;
&lt;p&gt;That's all!&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;/div&gt;
</content>
  </entry>
  <entry>
    <title type="text">My participation in the Google Summer of Code 2010</title>
    <id>/post/my_participation_in_gsoc_2010/</id>
    <updated>2010-04-28T04:42:33Z</updated>
    <published>2010-04-28T04:42:33Z</published>
    <link href="http://old.rafaelmartins.eng.br/post/my_participation_in_gsoc_2010/" />
    <author>
      <name>Rafael G. Martins</name>
      <email>rafael@rafaelmartins.eng.br</email>
    </author>
    <summary type="html">&lt;!-- tags: en-us,gentoo,mercurial,gsoc --&gt;
&lt;p&gt;Yeah! I'll work for &lt;a class=&quot;reference external&quot; href=&quot;http://www.gentoo.org/&quot;&gt;Gentoo Linux&lt;/a&gt; this summer (winter here in Brazil)!&lt;/p&gt;
&lt;p&gt;My project for finish the development of &lt;a class=&quot;reference external&quot; href=&quot;http://g-octave.rafaelmartins.eng.br/&quot;&gt;g-octave&lt;/a&gt; was accepted, and I'll
be paid by Google to do this job as part of the &lt;a class=&quot;reference external&quot; href=&quot;http://socghop.appspot.com/&quot;&gt;Google Summer of Code&lt;/a&gt;.
:o)&lt;/p&gt;
&lt;p&gt;I would like to thanks to all the people involved from Gentoo, specially
Denis Dupeyron (my mentor) and Sébastien Fabbro.&lt;/p&gt;
&lt;p&gt;I also applied for another project: add the support for narrow cloning to the
&lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; SCM. This feature would be very useful for all the people using
&lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;, but unfortunately I can work for only one project in the summer.&lt;/p&gt;
&lt;p&gt;I would like to thanks to all the &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; community, that helped me when
I was trying to understand how &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; works internally and figuring out
a way of implementation to write my proposal. Special thanks goes to Peter
Arrenbrecht, Martin Geisler and Dirkjan Ochtman.&lt;/p&gt;
&lt;p&gt;I have plans to work on this feature in the future, according with my
possibilities of time.&lt;/p&gt;
&lt;p&gt;By the way, &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; will be with me in this summer yet, as my SCM of
choice for &lt;a class=&quot;reference external&quot; href=&quot;http://g-octave.rafaelmartins.eng.br/&quot;&gt;g-octave&lt;/a&gt;. :)&lt;/p&gt;
&lt;p&gt;Good luck for all us!&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;!-- date added automatically by the script blohg_dump.py.
this file was exported from an old repository, and this comment will
help me to forcing the old creation date, instead of the date of the
first commit on the new repository. --&gt;
&lt;!-- date: 1272429753 --&gt;
</summary>
    <content type="html">&lt;!-- tags: en-us,gentoo,mercurial,gsoc --&gt;
&lt;p&gt;Yeah! I'll work for &lt;a class=&quot;reference external&quot; href=&quot;http://www.gentoo.org/&quot;&gt;Gentoo Linux&lt;/a&gt; this summer (winter here in Brazil)!&lt;/p&gt;
&lt;p&gt;My project for finish the development of &lt;a class=&quot;reference external&quot; href=&quot;http://g-octave.rafaelmartins.eng.br/&quot;&gt;g-octave&lt;/a&gt; was accepted, and I'll
be paid by Google to do this job as part of the &lt;a class=&quot;reference external&quot; href=&quot;http://socghop.appspot.com/&quot;&gt;Google Summer of Code&lt;/a&gt;.
:o)&lt;/p&gt;
&lt;p&gt;I would like to thanks to all the people involved from Gentoo, specially
Denis Dupeyron (my mentor) and Sébastien Fabbro.&lt;/p&gt;
&lt;p&gt;I also applied for another project: add the support for narrow cloning to the
&lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; SCM. This feature would be very useful for all the people using
&lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt;, but unfortunately I can work for only one project in the summer.&lt;/p&gt;
&lt;p&gt;I would like to thanks to all the &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; community, that helped me when
I was trying to understand how &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; works internally and figuring out
a way of implementation to write my proposal. Special thanks goes to Peter
Arrenbrecht, Martin Geisler and Dirkjan Ochtman.&lt;/p&gt;
&lt;p&gt;I have plans to work on this feature in the future, according with my
possibilities of time.&lt;/p&gt;
&lt;p&gt;By the way, &lt;a class=&quot;reference external&quot; href=&quot;http://mercurial.selenic.com/&quot;&gt;Mercurial&lt;/a&gt; will be with me in this summer yet, as my SCM of
choice for &lt;a class=&quot;reference external&quot; href=&quot;http://g-octave.rafaelmartins.eng.br/&quot;&gt;g-octave&lt;/a&gt;. :)&lt;/p&gt;
&lt;p&gt;Good luck for all us!&lt;/p&gt;
&lt;p&gt;Thanks!&lt;/p&gt;
&lt;!-- date added automatically by the script blohg_dump.py.
this file was exported from an old repository, and this comment will
help me to forcing the old creation date, instead of the date of the
first commit on the new repository. --&gt;
&lt;!-- date: 1272429753 --&gt;
</content>
  </entry>
</feed>
